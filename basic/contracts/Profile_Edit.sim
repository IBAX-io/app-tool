contract Profile_Edit {
    data {
        member_name string
        member_image bytes "file"
        information string "optional"
    }

    conditions {
        var app_name string
        app_name = "Basic application" 

        $member_map = DBFind("members").Where("id = $", $key_id).Row()
        $app_id = DBFind("applications").Where("name = $ AND deleted = 0", app_name).One("id")

        if !$member_map {
            // check member_name 
            $member_id = DBFind("members").Where("member_name = $", $member_name).One("id")
            if $member_id {
                warning "This member name is busy. Enter another member name, please"
            }
        }
    }

    action {
        var memberInfo map
        var image_id int
        var image_name string
        image_name = "avatar" 

        if $member_map {
            image_id = Int($member_map["image_id"]) 
            image_id = @1UploadBinary("Name,Data,ApplicationId", image_name, $member_image, Int($app_id))
            DBUpdate("members", Int($member_map["id"]), "member_info->information,image_id", $information, image_id)
        } else {
            memberInfo["information"] = $information
            image_id = @1UploadBinary("Name,Data,ApplicationId", image_name, $member_image, Int($app_id))
            DBInsert("members", "id,member_name,image_id,member_info", $key_id, $member_name, image_id, memberInfo)
        }
    }
}